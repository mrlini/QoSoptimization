verbosity = 0

evalthreads = 1
breedthreads = 1
#seed.0 = time
seed.0 = -492341


checkpoint = false
checkpoint-modulo = 1
prefix = ec

eval.problem = resonanceSearch.Problema

state = ec.simple.SimpleEvolutionState
init = ec.simple.SimpleInitializer
finish = ec.simple.SimpleFinisher

#breed = ec.simple.SimpleBreeder
#eval = ec.simple.SimpleEvaluator

breed = resonanceSearch.deRSversion.DErsBreeder
eval = resonanceSearch.deRSversion.DErsEval

quit-on-run-complete = true
generations = 100

#cr - uniform crossover ratio
breed.cr = 0.4
breed.f = 0.2
breed.f-noise = 0.001
breed.pf = 0.5


pop = ec.Population
pop.subpops = 2

#toate populatiile au parametrii ca si populatia 0
pop.default-subpop = 0

#print-params = true
#print-accessed-params = true

pop.subpop.0 = ec.Subpopulation
pop.subpop.0.size = 100
pop.subpop.0.duplicate-retries = 100
pop.subpop.0.species = ec.vector.FloatVectorSpecies
pop.subpop.0.species.ind = ec.vector.DoubleVectorIndividual
pop.subpop.0.species.min-gene = 0
pop.subpop.0.species.max-gene = 1 
pop.subpop.0.species.genome-size = 2000
pop.subpop.0.species.fitness = ec.simple.SimpleFitness

pop.subpop.0.species.pipe = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0 = ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = same

select.tournament.size = 1

#pop.subpop.0.species.crossover-type = sbx
#pop.subpop.0.species.crossover-distribution-index = 20
#pop.subpop.0.species.crossover-type = any
#pop.subpop.0.species.crossover-prob = 0.4

#pop.subpop.0.species.mutation-type = polynomial
#pop.subpop.0.species.mutation-distribution-index = 20
#pop.subpop.0.species.mutation-bounded = true

#pop.subpop.0.species.mutation-bounded =	true
#pop.subpop.0.species.mutation-prob = 0.03
#pop.subpop.0.species.crossover-type = one
#pop.subpop.0.species.mutation-type = gauss
#pop.subpop.0.species.mutation-stdev = 0.01


#+++++++++++++param pt populatiile interne++++++++++++++++++++++++

#exch = ec.simple.SimpleExchanger
exch = ec.exchange.InterPopulationExchange
#selectarea individului ce va fi mutat in pop urmatoare
exch.select = ec.select.TournamentSelection
select.base.n=5

#exch.select = ec.select.BestSelection
#select.best.n = 225
#selectia se face din toti indivizii populatiei

exch.select-to-die = ec.select.RandomSelection

#cati indivizi copiez, de cand si cat de des
exch.size = 2
exch.start = 2
exch.mod = 4

exch.chatty = false

exch.subpop.0.num-dest = 1
exch.subpop.0.dest.0 = 1
exch.subpop.1.num-dest = 1
exch.subpop.1.dest.0 = 2
exch.subpop.2.num-dest = 1
exch.subpop.2.dest.0 = 3
exch.subpop.3.num-dest = 1
exch.subpop.3.dest.0 = 4
exch.subpop.4.num-dest = 1
exch.subpop.4.dest.0 = 5
exch.subpop.5.num-dest = 1
exch.subpop.5.dest.0 = 6
exch.subpop.6.num-dest = 1
exch.subpop.6.dest.0 = 7
exch.subpop.7.num-dest = 1
exch.subpop.7.dest.0 = 8
exch.subpop.8.num-dest = 1
exch.subpop.8.dest.0 = 9
exch.subpop.9.num-dest = 1
exch.subpop.9.dest.0 = 0

exch.subpop.10.num-dest = 1